{"remainingRequest":"/home/liao/Desktop/kwic/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/liao/Desktop/kwic/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/liao/Desktop/kwic/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/liao/Desktop/kwic/src/components/kwic.vue?vue&type=template&id=e5b0f6d4&scoped=true&","dependencies":[{"path":"/home/liao/Desktop/kwic/src/components/kwic.vue","mtime":1609902519480},{"path":"/home/liao/Desktop/kwic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/liao/Desktop/kwic/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/liao/Desktop/kwic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/liao/Desktop/kwic/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}